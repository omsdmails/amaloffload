```yaml
# .github/workflows/build-windows.yml

name: Build & Release Binaries

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean dist folder
        run: rm -rf dist

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install -e .
          fi

      - name: Build executable for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: pyinstaller --onefile --name OffloadHelper main.py

      - name: Build executable for Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: pyinstaller --onefile --name offloadhelper_linux main.py

      - name: Build executable for macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          pyinstaller --onefile --target-arch x86_64 --name offloadhelper_macos_x86 main.py
          pyinstaller --onefile --target-arch arm64  --name offloadhelper_macos_arm main.py
          lipo -create dist/offloadhelper_macos_x86 dist/offloadhelper_macos_arm -output dist/offloadhelper_macos

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: offloadhelper-${{ matrix.os }}
          path: dist/
```
